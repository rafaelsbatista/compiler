Grammar

    0 $accept: P $end

    1 P: LDE

    2 LDE: LDE DE
    3    | DE

    4 DE: DV
    5   | B

    6 DV: R_VAR LI T_COLON TP T_SEMICOLON

    7 LI: LI T_COMMA IDD
    8   | IDD

    9 TP: R_INTEGER
   10   | R_CHAR
   11   | R_BOOLEAN
   12   | R_STRING

   13 B: T_LEFTBRACES LS T_RIGHTBRACES

   14 LS: S LS1

   15 LS1: S LS1
   16    | %empty

   17 S: R_IF E R_THEN S
   18  | R_IF E R_THEN S R_ELSE S
   19  | R_WHILE E R_DO S
   20  | B
   21  | IDU T_EQ E T_SEMICOLON
   22  | E T_SEMICOLON
   23  | R_BREAK T_SEMICOLON

   24 E: E T_AND F
   25  | E T_OR F
   26  | E T_LT F
   27  | E T_GT F
   28  | E T_LE F
   29  | E T_GE F
   30  | E T_EQEQ F
   31  | E T_NEQ F
   32  | E T_PLUS F
   33  | E T_MINUS F
   34  | E T_TIMES F
   35  | E T_DIVIDE F
   36  | F

   37 F: T_NOT F
   38  | TRUE
   39  | FALSE
   40  | CHR
   41  | STR
   42  | NUM
   43  | IDU

   44 IDU: T_ID

   45 IDD: T_ID

   46 TRUE: R_TRUE

   47 FALSE: R_FALSE

   48 CHR: T_CHAR

   49 STR: T_STRING

   50 NUM: T_NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
T_EQ (258) 21
T_NEQ (259) 31
T_LT (260) 26
T_GT (261) 27
T_LE (262) 28
T_GE (263) 29
T_EQEQ (264) 30
T_AND (265) 24
T_OR (266) 25
T_PLUS (267) 32
T_MINUS (268) 33
T_TIMES (269) 34
T_DIVIDE (270) 35
T_COLON (271) 6
T_SEMICOLON (272) 6 21 22 23
T_COMMA (273) 7
T_LEFTBRACES (274) 13
T_RIGHTBRACES (275) 13
T_NOT (276) 37
T_CHAR (277) 48
T_STRING (278) 49
T_ID (279) 44 45
T_NUMBER (280) 50
R_INTEGER (281) 9
R_CHAR (282) 10
R_BOOLEAN (283) 11
R_STRING (284) 12
R_VAR (285) 6
R_THEN (286) 17 18
R_IF (287) 17 18
R_ELSE (288) 18
R_WHILE (289) 19
R_DO (290) 19
R_BREAK (291) 23
R_TRUE (292) 46
R_FALSE (293) 47


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
P (40)
    on left: 1, on right: 0
LDE (41)
    on left: 2 3, on right: 1 2
DE (42)
    on left: 4 5, on right: 2 3
DV (43)
    on left: 6, on right: 4
LI (44)
    on left: 7 8, on right: 6 7
TP (45)
    on left: 9 10 11 12, on right: 6
B (46)
    on left: 13, on right: 5 20
LS (47)
    on left: 14, on right: 13
LS1 (48)
    on left: 15 16, on right: 14 15
S (49)
    on left: 17 18 19 20 21 22 23, on right: 14 15 17 18 19
E (50)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36, on right: 17 18
    19 21 22 24 25 26 27 28 29 30 31 32 33 34 35
F (51)
    on left: 37 38 39 40 41 42 43, on right: 24 25 26 27 28 29 30 31
    32 33 34 35 36 37
IDU (52)
    on left: 44, on right: 21 43
IDD (53)
    on left: 45, on right: 7 8
TRUE (54)
    on left: 46, on right: 38
FALSE (55)
    on left: 47, on right: 39
CHR (56)
    on left: 48, on right: 40
STR (57)
    on left: 49, on right: 41
NUM (58)
    on left: 50, on right: 42


State 0

    0 $accept: . P $end
    1 P: . LDE
    2 LDE: . LDE DE
    3    | . DE
    4 DE: . DV
    5   | . B
    6 DV: . R_VAR LI T_COLON TP T_SEMICOLON
   13 B: . T_LEFTBRACES LS T_RIGHTBRACES

    T_LEFTBRACES  shift, and go to state 1
    R_VAR         shift, and go to state 2

    P    go to state 3
    LDE  go to state 4
    DE   go to state 5
    DV   go to state 6
    B    go to state 7


State 1

   13 B: . T_LEFTBRACES LS T_RIGHTBRACES
   13  | T_LEFTBRACES . LS T_RIGHTBRACES
   14 LS: . S LS1
   17 S: . R_IF E R_THEN S
   18  | . R_IF E R_THEN S R_ELSE S
   19  | . R_WHILE E R_DO S
   20  | . B
   21  | . IDU T_EQ E T_SEMICOLON
   22  | . E T_SEMICOLON
   23  | . R_BREAK T_SEMICOLON
   24 E: . E T_AND F
   25  | . E T_OR F
   26  | . E T_LT F
   27  | . E T_GT F
   28  | . E T_LE F
   29  | . E T_GE F
   30  | . E T_EQEQ F
   31  | . E T_NEQ F
   32  | . E T_PLUS F
   33  | . E T_MINUS F
   34  | . E T_TIMES F
   35  | . E T_DIVIDE F
   36  | . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_LEFTBRACES  shift, and go to state 1
    T_NOT         shift, and go to state 8
    T_CHAR        shift, and go to state 9
    T_STRING      shift, and go to state 10
    T_ID          shift, and go to state 11
    T_NUMBER      shift, and go to state 12
    R_IF          shift, and go to state 13
    R_WHILE       shift, and go to state 14
    R_BREAK       shift, and go to state 15
    R_TRUE        shift, and go to state 16
    R_FALSE       shift, and go to state 17

    B      go to state 18
    LS     go to state 19
    S      go to state 20
    E      go to state 21
    F      go to state 22
    IDU    go to state 23
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 2

    6 DV: R_VAR . LI T_COLON TP T_SEMICOLON
    7 LI: . LI T_COMMA IDD
    8   | . IDD
   45 IDD: . T_ID

    T_ID  shift, and go to state 29

    LI   go to state 30
    IDD  go to state 31


State 3

    0 $accept: P . $end

    $end  shift, and go to state 32


State 4

    1 P: LDE .  [$end]
    2 LDE: LDE . DE
    4 DE: . DV
    5   | . B
    6 DV: . R_VAR LI T_COLON TP T_SEMICOLON
   13 B: . T_LEFTBRACES LS T_RIGHTBRACES

    T_LEFTBRACES  shift, and go to state 1
    R_VAR         shift, and go to state 2

    $default  reduce using rule 1 (P)

    DE  go to state 33
    DV  go to state 6
    B   go to state 7


State 5

    3 LDE: DE .

    $default  reduce using rule 3 (LDE)


State 6

    4 DE: DV .

    $default  reduce using rule 4 (DE)


State 7

    5 DE: B .

    $default  reduce using rule 5 (DE)


State 8

   37 F: . T_NOT F
   37  | T_NOT . F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 34
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 9

   48 CHR: T_CHAR .

    $default  reduce using rule 48 (CHR)


State 10

   49 STR: T_STRING .

    $default  reduce using rule 49 (STR)


State 11

   44 IDU: T_ID .

    $default  reduce using rule 44 (IDU)


State 12

   50 NUM: T_NUMBER .

    $default  reduce using rule 50 (NUM)


State 13

   17 S: R_IF . E R_THEN S
   18  | R_IF . E R_THEN S R_ELSE S
   24 E: . E T_AND F
   25  | . E T_OR F
   26  | . E T_LT F
   27  | . E T_GT F
   28  | . E T_LE F
   29  | . E T_GE F
   30  | . E T_EQEQ F
   31  | . E T_NEQ F
   32  | . E T_PLUS F
   33  | . E T_MINUS F
   34  | . E T_TIMES F
   35  | . E T_DIVIDE F
   36  | . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    E      go to state 36
    F      go to state 22
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 14

   19 S: R_WHILE . E R_DO S
   24 E: . E T_AND F
   25  | . E T_OR F
   26  | . E T_LT F
   27  | . E T_GT F
   28  | . E T_LE F
   29  | . E T_GE F
   30  | . E T_EQEQ F
   31  | . E T_NEQ F
   32  | . E T_PLUS F
   33  | . E T_MINUS F
   34  | . E T_TIMES F
   35  | . E T_DIVIDE F
   36  | . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    E      go to state 37
    F      go to state 22
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 15

   23 S: R_BREAK . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 38


State 16

   46 TRUE: R_TRUE .

    $default  reduce using rule 46 (TRUE)


State 17

   47 FALSE: R_FALSE .

    $default  reduce using rule 47 (FALSE)


State 18

   20 S: B .

    $default  reduce using rule 20 (S)


State 19

   13 B: T_LEFTBRACES LS . T_RIGHTBRACES

    T_RIGHTBRACES  shift, and go to state 39


State 20

   13 B: . T_LEFTBRACES LS T_RIGHTBRACES
   14 LS: S . LS1
   15 LS1: . S LS1
   16    | . %empty  [T_RIGHTBRACES]
   17 S: . R_IF E R_THEN S
   18  | . R_IF E R_THEN S R_ELSE S
   19  | . R_WHILE E R_DO S
   20  | . B
   21  | . IDU T_EQ E T_SEMICOLON
   22  | . E T_SEMICOLON
   23  | . R_BREAK T_SEMICOLON
   24 E: . E T_AND F
   25  | . E T_OR F
   26  | . E T_LT F
   27  | . E T_GT F
   28  | . E T_LE F
   29  | . E T_GE F
   30  | . E T_EQEQ F
   31  | . E T_NEQ F
   32  | . E T_PLUS F
   33  | . E T_MINUS F
   34  | . E T_TIMES F
   35  | . E T_DIVIDE F
   36  | . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_LEFTBRACES  shift, and go to state 1
    T_NOT         shift, and go to state 8
    T_CHAR        shift, and go to state 9
    T_STRING      shift, and go to state 10
    T_ID          shift, and go to state 11
    T_NUMBER      shift, and go to state 12
    R_IF          shift, and go to state 13
    R_WHILE       shift, and go to state 14
    R_BREAK       shift, and go to state 15
    R_TRUE        shift, and go to state 16
    R_FALSE       shift, and go to state 17

    $default  reduce using rule 16 (LS1)

    B      go to state 18
    LS1    go to state 40
    S      go to state 41
    E      go to state 21
    F      go to state 22
    IDU    go to state 23
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 21

   22 S: E . T_SEMICOLON
   24 E: E . T_AND F
   25  | E . T_OR F
   26  | E . T_LT F
   27  | E . T_GT F
   28  | E . T_LE F
   29  | E . T_GE F
   30  | E . T_EQEQ F
   31  | E . T_NEQ F
   32  | E . T_PLUS F
   33  | E . T_MINUS F
   34  | E . T_TIMES F
   35  | E . T_DIVIDE F

    T_NEQ        shift, and go to state 42
    T_LT         shift, and go to state 43
    T_GT         shift, and go to state 44
    T_LE         shift, and go to state 45
    T_GE         shift, and go to state 46
    T_EQEQ       shift, and go to state 47
    T_AND        shift, and go to state 48
    T_OR         shift, and go to state 49
    T_PLUS       shift, and go to state 50
    T_MINUS      shift, and go to state 51
    T_TIMES      shift, and go to state 52
    T_DIVIDE     shift, and go to state 53
    T_SEMICOLON  shift, and go to state 54


State 22

   36 E: F .

    $default  reduce using rule 36 (E)


State 23

   21 S: IDU . T_EQ E T_SEMICOLON
   43 F: IDU .  [T_NEQ, T_LT, T_GT, T_LE, T_GE, T_EQEQ, T_AND, T_OR, T_PLUS, T_MINUS, T_TIMES, T_DIVIDE, T_SEMICOLON]

    T_EQ  shift, and go to state 55

    $default  reduce using rule 43 (F)


State 24

   38 F: TRUE .

    $default  reduce using rule 38 (F)


State 25

   39 F: FALSE .

    $default  reduce using rule 39 (F)


State 26

   40 F: CHR .

    $default  reduce using rule 40 (F)


State 27

   41 F: STR .

    $default  reduce using rule 41 (F)


State 28

   42 F: NUM .

    $default  reduce using rule 42 (F)


State 29

   45 IDD: T_ID .

    $default  reduce using rule 45 (IDD)


State 30

    6 DV: R_VAR LI . T_COLON TP T_SEMICOLON
    7 LI: LI . T_COMMA IDD

    T_COLON  shift, and go to state 56
    T_COMMA  shift, and go to state 57


State 31

    8 LI: IDD .

    $default  reduce using rule 8 (LI)


State 32

    0 $accept: P $end .

    $default  accept


State 33

    2 LDE: LDE DE .

    $default  reduce using rule 2 (LDE)


State 34

   37 F: T_NOT F .

    $default  reduce using rule 37 (F)


State 35

   43 F: IDU .

    $default  reduce using rule 43 (F)


State 36

   17 S: R_IF E . R_THEN S
   18  | R_IF E . R_THEN S R_ELSE S
   24 E: E . T_AND F
   25  | E . T_OR F
   26  | E . T_LT F
   27  | E . T_GT F
   28  | E . T_LE F
   29  | E . T_GE F
   30  | E . T_EQEQ F
   31  | E . T_NEQ F
   32  | E . T_PLUS F
   33  | E . T_MINUS F
   34  | E . T_TIMES F
   35  | E . T_DIVIDE F

    T_NEQ     shift, and go to state 42
    T_LT      shift, and go to state 43
    T_GT      shift, and go to state 44
    T_LE      shift, and go to state 45
    T_GE      shift, and go to state 46
    T_EQEQ    shift, and go to state 47
    T_AND     shift, and go to state 48
    T_OR      shift, and go to state 49
    T_PLUS    shift, and go to state 50
    T_MINUS   shift, and go to state 51
    T_TIMES   shift, and go to state 52
    T_DIVIDE  shift, and go to state 53
    R_THEN    shift, and go to state 58


State 37

   19 S: R_WHILE E . R_DO S
   24 E: E . T_AND F
   25  | E . T_OR F
   26  | E . T_LT F
   27  | E . T_GT F
   28  | E . T_LE F
   29  | E . T_GE F
   30  | E . T_EQEQ F
   31  | E . T_NEQ F
   32  | E . T_PLUS F
   33  | E . T_MINUS F
   34  | E . T_TIMES F
   35  | E . T_DIVIDE F

    T_NEQ     shift, and go to state 42
    T_LT      shift, and go to state 43
    T_GT      shift, and go to state 44
    T_LE      shift, and go to state 45
    T_GE      shift, and go to state 46
    T_EQEQ    shift, and go to state 47
    T_AND     shift, and go to state 48
    T_OR      shift, and go to state 49
    T_PLUS    shift, and go to state 50
    T_MINUS   shift, and go to state 51
    T_TIMES   shift, and go to state 52
    T_DIVIDE  shift, and go to state 53
    R_DO      shift, and go to state 59


State 38

   23 S: R_BREAK T_SEMICOLON .

    $default  reduce using rule 23 (S)


State 39

   13 B: T_LEFTBRACES LS T_RIGHTBRACES .

    $default  reduce using rule 13 (B)


State 40

   14 LS: S LS1 .

    $default  reduce using rule 14 (LS)


State 41

   13 B: . T_LEFTBRACES LS T_RIGHTBRACES
   15 LS1: . S LS1
   15    | S . LS1
   16    | . %empty  [T_RIGHTBRACES]
   17 S: . R_IF E R_THEN S
   18  | . R_IF E R_THEN S R_ELSE S
   19  | . R_WHILE E R_DO S
   20  | . B
   21  | . IDU T_EQ E T_SEMICOLON
   22  | . E T_SEMICOLON
   23  | . R_BREAK T_SEMICOLON
   24 E: . E T_AND F
   25  | . E T_OR F
   26  | . E T_LT F
   27  | . E T_GT F
   28  | . E T_LE F
   29  | . E T_GE F
   30  | . E T_EQEQ F
   31  | . E T_NEQ F
   32  | . E T_PLUS F
   33  | . E T_MINUS F
   34  | . E T_TIMES F
   35  | . E T_DIVIDE F
   36  | . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_LEFTBRACES  shift, and go to state 1
    T_NOT         shift, and go to state 8
    T_CHAR        shift, and go to state 9
    T_STRING      shift, and go to state 10
    T_ID          shift, and go to state 11
    T_NUMBER      shift, and go to state 12
    R_IF          shift, and go to state 13
    R_WHILE       shift, and go to state 14
    R_BREAK       shift, and go to state 15
    R_TRUE        shift, and go to state 16
    R_FALSE       shift, and go to state 17

    $default  reduce using rule 16 (LS1)

    B      go to state 18
    LS1    go to state 60
    S      go to state 41
    E      go to state 21
    F      go to state 22
    IDU    go to state 23
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 42

   31 E: E T_NEQ . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 61
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 43

   26 E: E T_LT . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 62
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 44

   27 E: E T_GT . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 63
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 45

   28 E: E T_LE . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 64
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 46

   29 E: E T_GE . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 65
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 47

   30 E: E T_EQEQ . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 66
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 48

   24 E: E T_AND . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 67
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 49

   25 E: E T_OR . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 68
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 50

   32 E: E T_PLUS . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 69
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 51

   33 E: E T_MINUS . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 70
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 52

   34 E: E T_TIMES . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 71
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 53

   35 E: E T_DIVIDE . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    F      go to state 72
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 54

   22 S: E T_SEMICOLON .

    $default  reduce using rule 22 (S)


State 55

   21 S: IDU T_EQ . E T_SEMICOLON
   24 E: . E T_AND F
   25  | . E T_OR F
   26  | . E T_LT F
   27  | . E T_GT F
   28  | . E T_LE F
   29  | . E T_GE F
   30  | . E T_EQEQ F
   31  | . E T_NEQ F
   32  | . E T_PLUS F
   33  | . E T_MINUS F
   34  | . E T_TIMES F
   35  | . E T_DIVIDE F
   36  | . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_NOT     shift, and go to state 8
    T_CHAR    shift, and go to state 9
    T_STRING  shift, and go to state 10
    T_ID      shift, and go to state 11
    T_NUMBER  shift, and go to state 12
    R_TRUE    shift, and go to state 16
    R_FALSE   shift, and go to state 17

    E      go to state 73
    F      go to state 22
    IDU    go to state 35
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 56

    6 DV: R_VAR LI T_COLON . TP T_SEMICOLON
    9 TP: . R_INTEGER
   10   | . R_CHAR
   11   | . R_BOOLEAN
   12   | . R_STRING

    R_INTEGER  shift, and go to state 74
    R_CHAR     shift, and go to state 75
    R_BOOLEAN  shift, and go to state 76
    R_STRING   shift, and go to state 77

    TP  go to state 78


State 57

    7 LI: LI T_COMMA . IDD
   45 IDD: . T_ID

    T_ID  shift, and go to state 29

    IDD  go to state 79


State 58

   13 B: . T_LEFTBRACES LS T_RIGHTBRACES
   17 S: . R_IF E R_THEN S
   17  | R_IF E R_THEN . S
   18  | . R_IF E R_THEN S R_ELSE S
   18  | R_IF E R_THEN . S R_ELSE S
   19  | . R_WHILE E R_DO S
   20  | . B
   21  | . IDU T_EQ E T_SEMICOLON
   22  | . E T_SEMICOLON
   23  | . R_BREAK T_SEMICOLON
   24 E: . E T_AND F
   25  | . E T_OR F
   26  | . E T_LT F
   27  | . E T_GT F
   28  | . E T_LE F
   29  | . E T_GE F
   30  | . E T_EQEQ F
   31  | . E T_NEQ F
   32  | . E T_PLUS F
   33  | . E T_MINUS F
   34  | . E T_TIMES F
   35  | . E T_DIVIDE F
   36  | . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_LEFTBRACES  shift, and go to state 1
    T_NOT         shift, and go to state 8
    T_CHAR        shift, and go to state 9
    T_STRING      shift, and go to state 10
    T_ID          shift, and go to state 11
    T_NUMBER      shift, and go to state 12
    R_IF          shift, and go to state 13
    R_WHILE       shift, and go to state 14
    R_BREAK       shift, and go to state 15
    R_TRUE        shift, and go to state 16
    R_FALSE       shift, and go to state 17

    B      go to state 18
    S      go to state 80
    E      go to state 21
    F      go to state 22
    IDU    go to state 23
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 59

   13 B: . T_LEFTBRACES LS T_RIGHTBRACES
   17 S: . R_IF E R_THEN S
   18  | . R_IF E R_THEN S R_ELSE S
   19  | . R_WHILE E R_DO S
   19  | R_WHILE E R_DO . S
   20  | . B
   21  | . IDU T_EQ E T_SEMICOLON
   22  | . E T_SEMICOLON
   23  | . R_BREAK T_SEMICOLON
   24 E: . E T_AND F
   25  | . E T_OR F
   26  | . E T_LT F
   27  | . E T_GT F
   28  | . E T_LE F
   29  | . E T_GE F
   30  | . E T_EQEQ F
   31  | . E T_NEQ F
   32  | . E T_PLUS F
   33  | . E T_MINUS F
   34  | . E T_TIMES F
   35  | . E T_DIVIDE F
   36  | . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_LEFTBRACES  shift, and go to state 1
    T_NOT         shift, and go to state 8
    T_CHAR        shift, and go to state 9
    T_STRING      shift, and go to state 10
    T_ID          shift, and go to state 11
    T_NUMBER      shift, and go to state 12
    R_IF          shift, and go to state 13
    R_WHILE       shift, and go to state 14
    R_BREAK       shift, and go to state 15
    R_TRUE        shift, and go to state 16
    R_FALSE       shift, and go to state 17

    B      go to state 18
    S      go to state 81
    E      go to state 21
    F      go to state 22
    IDU    go to state 23
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 60

   15 LS1: S LS1 .

    $default  reduce using rule 15 (LS1)


State 61

   31 E: E T_NEQ F .

    $default  reduce using rule 31 (E)


State 62

   26 E: E T_LT F .

    $default  reduce using rule 26 (E)


State 63

   27 E: E T_GT F .

    $default  reduce using rule 27 (E)


State 64

   28 E: E T_LE F .

    $default  reduce using rule 28 (E)


State 65

   29 E: E T_GE F .

    $default  reduce using rule 29 (E)


State 66

   30 E: E T_EQEQ F .

    $default  reduce using rule 30 (E)


State 67

   24 E: E T_AND F .

    $default  reduce using rule 24 (E)


State 68

   25 E: E T_OR F .

    $default  reduce using rule 25 (E)


State 69

   32 E: E T_PLUS F .

    $default  reduce using rule 32 (E)


State 70

   33 E: E T_MINUS F .

    $default  reduce using rule 33 (E)


State 71

   34 E: E T_TIMES F .

    $default  reduce using rule 34 (E)


State 72

   35 E: E T_DIVIDE F .

    $default  reduce using rule 35 (E)


State 73

   21 S: IDU T_EQ E . T_SEMICOLON
   24 E: E . T_AND F
   25  | E . T_OR F
   26  | E . T_LT F
   27  | E . T_GT F
   28  | E . T_LE F
   29  | E . T_GE F
   30  | E . T_EQEQ F
   31  | E . T_NEQ F
   32  | E . T_PLUS F
   33  | E . T_MINUS F
   34  | E . T_TIMES F
   35  | E . T_DIVIDE F

    T_NEQ        shift, and go to state 42
    T_LT         shift, and go to state 43
    T_GT         shift, and go to state 44
    T_LE         shift, and go to state 45
    T_GE         shift, and go to state 46
    T_EQEQ       shift, and go to state 47
    T_AND        shift, and go to state 48
    T_OR         shift, and go to state 49
    T_PLUS       shift, and go to state 50
    T_MINUS      shift, and go to state 51
    T_TIMES      shift, and go to state 52
    T_DIVIDE     shift, and go to state 53
    T_SEMICOLON  shift, and go to state 82


State 74

    9 TP: R_INTEGER .

    $default  reduce using rule 9 (TP)


State 75

   10 TP: R_CHAR .

    $default  reduce using rule 10 (TP)


State 76

   11 TP: R_BOOLEAN .

    $default  reduce using rule 11 (TP)


State 77

   12 TP: R_STRING .

    $default  reduce using rule 12 (TP)


State 78

    6 DV: R_VAR LI T_COLON TP . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 83


State 79

    7 LI: LI T_COMMA IDD .

    $default  reduce using rule 7 (LI)


State 80

   17 S: R_IF E R_THEN S .  [T_LEFTBRACES, T_RIGHTBRACES, T_NOT, T_CHAR, T_STRING, T_ID, T_NUMBER, R_IF, R_WHILE, R_BREAK, R_TRUE, R_FALSE]
   18  | R_IF E R_THEN S . R_ELSE S

    R_ELSE  shift, and go to state 84

    $default  reduce using rule 17 (S)

    Conflict between rule 17 and token R_ELSE resolved as shift (%right R_ELSE).


State 81

   19 S: R_WHILE E R_DO S .

    $default  reduce using rule 19 (S)


State 82

   21 S: IDU T_EQ E T_SEMICOLON .

    $default  reduce using rule 21 (S)


State 83

    6 DV: R_VAR LI T_COLON TP T_SEMICOLON .

    $default  reduce using rule 6 (DV)


State 84

   13 B: . T_LEFTBRACES LS T_RIGHTBRACES
   17 S: . R_IF E R_THEN S
   18  | . R_IF E R_THEN S R_ELSE S
   18  | R_IF E R_THEN S R_ELSE . S
   19  | . R_WHILE E R_DO S
   20  | . B
   21  | . IDU T_EQ E T_SEMICOLON
   22  | . E T_SEMICOLON
   23  | . R_BREAK T_SEMICOLON
   24 E: . E T_AND F
   25  | . E T_OR F
   26  | . E T_LT F
   27  | . E T_GT F
   28  | . E T_LE F
   29  | . E T_GE F
   30  | . E T_EQEQ F
   31  | . E T_NEQ F
   32  | . E T_PLUS F
   33  | . E T_MINUS F
   34  | . E T_TIMES F
   35  | . E T_DIVIDE F
   36  | . F
   37 F: . T_NOT F
   38  | . TRUE
   39  | . FALSE
   40  | . CHR
   41  | . STR
   42  | . NUM
   43  | . IDU
   44 IDU: . T_ID
   46 TRUE: . R_TRUE
   47 FALSE: . R_FALSE
   48 CHR: . T_CHAR
   49 STR: . T_STRING
   50 NUM: . T_NUMBER

    T_LEFTBRACES  shift, and go to state 1
    T_NOT         shift, and go to state 8
    T_CHAR        shift, and go to state 9
    T_STRING      shift, and go to state 10
    T_ID          shift, and go to state 11
    T_NUMBER      shift, and go to state 12
    R_IF          shift, and go to state 13
    R_WHILE       shift, and go to state 14
    R_BREAK       shift, and go to state 15
    R_TRUE        shift, and go to state 16
    R_FALSE       shift, and go to state 17

    B      go to state 18
    S      go to state 85
    E      go to state 21
    F      go to state 22
    IDU    go to state 23
    TRUE   go to state 24
    FALSE  go to state 25
    CHR    go to state 26
    STR    go to state 27
    NUM    go to state 28


State 85

   18 S: R_IF E R_THEN S R_ELSE S .

    $default  reduce using rule 18 (S)
